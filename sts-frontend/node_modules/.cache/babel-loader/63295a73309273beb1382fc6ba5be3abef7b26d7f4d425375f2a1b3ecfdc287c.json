{"ast":null,"code":"var _jsxFileName = \"/Users/sorensloth/Git_repositories/Project-Applied-CogSci-Stuttering/sts-frontend/src/components/SyllableStepper.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { loadSentencesFromCSV } from '../utils/parseCSV';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SyllableStepper = () => {\n  _s();\n  const [sentences, setSentences] = useState([]);\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const [currentSyllableIndex, setCurrentSyllableIndex] = useState(0);\n  useEffect(() => {\n    fetch('/STS_practice_sentences.csv').then(res => res.text()).then(text => {\n      const result = loadSentencesFromCSV(text);\n      setSentences(result);\n    });\n  }, []);\n  const nextSyllable = () => {\n    const current = sentences[currentSentenceIndex];\n    if (!current) return;\n    if (currentSyllableIndex < current.syllables.length - 1) {\n      setCurrentSyllableIndex(prev => prev + 1);\n    } else if (currentSentenceIndex < sentences.length - 1) {\n      setCurrentSentenceIndex(prev => prev + 1);\n      setCurrentSyllableIndex(0);\n    }\n  };\n  useEffect(() => {\n    const handleKey = e => {\n      if (e.code === 'Space') {\n        e.preventDefault();\n        nextSyllable();\n      }\n    };\n    window.addEventListener('keydown', handleKey);\n    return () => window.removeEventListener('keydown', handleKey);\n  }, [sentences, currentSentenceIndex, currentSyllableIndex]);\n  if (sentences.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading sentences...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 38\n  }, this);\n  const current = sentences[currentSentenceIndex];\n  const syllable = current.syllables[currentSyllableIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '3rem',\n      textAlign: 'center',\n      marginTop: '4rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Syllable \", currentSyllableIndex + 1, \" of \", current.syllables.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: syllable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SyllableStepper, \"ikZUqHdjoTk9fy4es/hajzTlj4s=\");\n_c = SyllableStepper;\nexport default SyllableStepper;\nvar _c;\n$RefreshReg$(_c, \"SyllableStepper\");","map":{"version":3,"names":["React","useEffect","useState","loadSentencesFromCSV","jsxDEV","_jsxDEV","SyllableStepper","_s","sentences","setSentences","currentSentenceIndex","setCurrentSentenceIndex","currentSyllableIndex","setCurrentSyllableIndex","fetch","then","res","text","result","nextSyllable","current","syllables","length","prev","handleKey","e","code","preventDefault","window","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","syllable","style","fontSize","textAlign","marginTop","_c","$RefreshReg$"],"sources":["/Users/sorensloth/Git_repositories/Project-Applied-CogSci-Stuttering/sts-frontend/src/components/SyllableStepper.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { loadSentencesFromCSV, Sentence } from '../utils/parseCSV';\n\nconst SyllableStepper: React.FC = () => {\n  const [sentences, setSentences] = useState<Sentence[]>([]);\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const [currentSyllableIndex, setCurrentSyllableIndex] = useState(0);\n\n  useEffect(() => {\n    fetch('/STS_practice_sentences.csv')\n      .then(res => res.text())\n      .then(text => {\n        const result = loadSentencesFromCSV(text);\n        setSentences(result);\n      });\n  }, []);\n\n  const nextSyllable = () => {\n    const current = sentences[currentSentenceIndex];\n    if (!current) return;\n\n    if (currentSyllableIndex < current.syllables.length - 1) {\n      setCurrentSyllableIndex(prev => prev + 1);\n    } else if (currentSentenceIndex < sentences.length - 1) {\n      setCurrentSentenceIndex(prev => prev + 1);\n      setCurrentSyllableIndex(0);\n    }\n  };\n\n  useEffect(() => {\n    const handleKey = (e: KeyboardEvent) => {\n      if (e.code === 'Space') {\n        e.preventDefault();\n        nextSyllable();\n      }\n    };\n    window.addEventListener('keydown', handleKey);\n    return () => window.removeEventListener('keydown', handleKey);\n  }, [sentences, currentSentenceIndex, currentSyllableIndex]);\n\n  if (sentences.length === 0) return <p>Loading sentences...</p>;\n\n  const current = sentences[currentSentenceIndex];\n  const syllable = current.syllables[currentSyllableIndex];\n\n  return (\n    <div style={{ fontSize: '3rem', textAlign: 'center', marginTop: '4rem' }}>\n      <p>Syllable {currentSyllableIndex + 1} of {current.syllables.length}</p>\n      <div style={{ marginTop: '2rem' }}>\n        <strong>{syllable}</strong>\n      </div>\n    </div>\n  );\n};\n\nexport default SyllableStepper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}