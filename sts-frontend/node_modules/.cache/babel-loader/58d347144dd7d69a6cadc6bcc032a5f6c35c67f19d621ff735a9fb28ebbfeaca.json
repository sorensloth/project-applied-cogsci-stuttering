{"ast":null,"code":"import Papa from 'papaparse';\nexport const loadSentencesFromCSV = csvText => {\n  const parsed = Papa.parse(csvText, {\n    header: true,\n    skipEmptyLines: true\n  });\n  const data = parsed.data;\n  const sentenceMap = {};\n  data.forEach(row => {\n    const sentenceNum = parseInt(row.sentence_number || row.sentenceNumber);\n    const syllables = row.syllables.split('-');\n    if (!sentenceMap[sentenceNum]) {\n      sentenceMap[sentenceNum] = [];\n    }\n    sentenceMap[sentenceNum].push(...syllables);\n  });\n  return Object.entries(sentenceMap).map(([num, syllables]) => ({\n    sentenceNumber: parseInt(num),\n    syllables\n  }));\n};","map":{"version":3,"names":["Papa","loadSentencesFromCSV","csvText","parsed","parse","header","skipEmptyLines","data","sentenceMap","forEach","row","sentenceNum","parseInt","sentence_number","sentenceNumber","syllables","split","push","Object","entries","map","num"],"sources":["/Users/sorensloth/Git_repositories/Project-Applied-CogSci-Stuttering/sts-frontend/src/utils/parseCSV.ts"],"sourcesContent":["import Papa from 'papaparse';\n\nexport type Sentence = {\n  sentenceNumber: number;\n  syllables: string[];\n};\n\nexport const loadSentencesFromCSV = (csvText: string): Sentence[] => {\n  const parsed = Papa.parse(csvText, {\n    header: true,\n    skipEmptyLines: true,\n  });\n\n  const data = parsed.data as any[];\n\n  const sentenceMap: Record<number, string[]> = {};\n\n  data.forEach(row => {\n    const sentenceNum = parseInt(row.sentence_number || row.sentenceNumber);\n    const syllables = row.syllables.split('-');\n\n    if (!sentenceMap[sentenceNum]) {\n      sentenceMap[sentenceNum] = [];\n    }\n\n    sentenceMap[sentenceNum].push(...syllables);\n  });\n\n  return Object.entries(sentenceMap).map(([num, syllables]) => ({\n    sentenceNumber: parseInt(num),\n    syllables,\n  }));\n};\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAO5B,OAAO,MAAMC,oBAAoB,GAAIC,OAAe,IAAiB;EACnE,MAAMC,MAAM,GAAGH,IAAI,CAACI,KAAK,CAACF,OAAO,EAAE;IACjCG,MAAM,EAAE,IAAI;IACZC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGJ,MAAM,CAACI,IAAa;EAEjC,MAAMC,WAAqC,GAAG,CAAC,CAAC;EAEhDD,IAAI,CAACE,OAAO,CAACC,GAAG,IAAI;IAClB,MAAMC,WAAW,GAAGC,QAAQ,CAACF,GAAG,CAACG,eAAe,IAAIH,GAAG,CAACI,cAAc,CAAC;IACvE,MAAMC,SAAS,GAAGL,GAAG,CAACK,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC;IAE1C,IAAI,CAACR,WAAW,CAACG,WAAW,CAAC,EAAE;MAC7BH,WAAW,CAACG,WAAW,CAAC,GAAG,EAAE;IAC/B;IAEAH,WAAW,CAACG,WAAW,CAAC,CAACM,IAAI,CAAC,GAAGF,SAAS,CAAC;EAC7C,CAAC,CAAC;EAEF,OAAOG,MAAM,CAACC,OAAO,CAACX,WAAW,CAAC,CAACY,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEN,SAAS,CAAC,MAAM;IAC5DD,cAAc,EAAEF,QAAQ,CAACS,GAAG,CAAC;IAC7BN;EACF,CAAC,CAAC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}